$date
	Sat May 11 23:32:41 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_subtractor_test $end
$var wire 1 ! cout $end
$var wire 4 " s [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module G0 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 ! cout $end
$var wire 4 ( s [3:0] $end
$var wire 3 ) c [3:1] $end
$scope module FS0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 - s $end
$var wire 1 . w1 $end
$var wire 1 / w2 $end
$var wire 1 0 w3 $end
$upscope $end
$scope module FS1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 s $end
$var wire 1 6 w1 $end
$var wire 1 7 w2 $end
$var wire 1 8 w3 $end
$upscope $end
$scope module FS2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = s $end
$var wire 1 > w1 $end
$var wire 1 ? w2 $end
$var wire 1 @ w3 $end
$upscope $end
$scope module FS3 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C cin $end
$var wire 1 ! cout $end
$var wire 1 D s $end
$var wire 1 E w1 $end
$var wire 1 F w2 $end
$var wire 1 G w3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0G
xF
0E
xD
xC
0B
0A
0@
x?
0>
x=
x<
x;
0:
09
08
x7
06
x5
x4
x3
02
01
00
x/
0.
0-
x,
0+
0*
bx )
bx0 (
b0 '
b0 &
0%
b0 $
b0 #
bx0 "
x!
$end
#5
bx1 "
bx1 (
1-
1.
0/
16
1>
1E
1*
11
19
1A
b1111 #
b1111 &
#10
bx0 "
bx0 (
0-
1%
#15
bx1 "
bx1 (
1-
0.
06
x8
0>
x@
0E
xG
1+
12
1:
1B
b1111 $
b1111 '
#20
bx0 "
bx0 (
0-
0%
#25
bx1 "
bx1 (
1-
x0
1.
x/
1>
0*
09
b1010 #
b1010 &
#50
