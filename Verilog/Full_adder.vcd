$date
	Fri May 10 22:34:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_four_bit_full_adder $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 1 + c0 $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 . sum $end
$upscope $end
$scope module fa1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 1 sum $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 4 sum $end
$upscope $end
$scope module fa3 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
07
06
15
04
13
02
01
10
1/
0.
0-
0,
0+
1*
1)
b0 (
b110 '
b1010 &
0%
b110 $
b1010 #
1"
b0 !
$end
#5
b1 !
b1 (
1.
1%
#10
